/* Explanation of variables:
btn_colors: stores array of colors for random selection
genPattern: pattern generated by game for player to input
started: used to control game starts
gameover: used to check whether the game got over and control restarts
playerturn: used to signify whether its the player's turn and control player inputs
round: variable to signify which round the player is currently in
*/

let btn_colors = ["green", "red", "yellow", "blue"];
let genPattern = [];
let playPattern = [];
let started = false;
let gameover = false;
let playerTurn = false;
let submitted = false;
let round = 1;

// button animation when clicked
function animateButton(btn) {
    $("#" + btn).css("opacity", "0.5");
    setTimeout(function() {
        $("#" + btn).css("opacity", "1");
    }, 100);
    let audio = new Audio("./sounds/" + btn + ".mp3");
    audio.play();
}

function submitLogic() {
    $(".submit").css("opacity", "0.5");
    setTimeout(function() {
        $(".submit").css("opacity", "1");
    }, 100);

    if (!started && !gameover) {
        $("h1").text("Round " + round);
        started = true;
        generatePattern();
        $(".submit").text("Submit");
    }
    else if (gameover) {
        started = true;
        gameover = false;
        generatePattern();
        $(".button").removeAttr("style");
        $(".submit").text("Submit");
    }
    else if (JSON.stringify(playPattern) === JSON.stringify(genPattern) && playerTurn) {
        round++;
        counter = 0;
        started = false;
        playPattern = [];
    }
}

// generates a pattern when game is started or after successful round
function generatePattern() {
    playerTurn = false;
    console.log(round);
    $("h1").text(`Round ${round}`);
    $(".button").attr("disabled", "true"); // disabled buttons while the sequence is shown
    let randomNumber = Math.floor(Math.random() * 4);
    genPattern.push(btn_colors[randomNumber]);

    // clicks buttons in the correct order
    for (let i = 0; i < genPattern.length; i++) {
        setTimeout(function() {
            $("#" + genPattern[i]).click();
        }, 500 * (i+ 1));
    }

    // re-enabling of the buttons
    setTimeout(function() {
        $(".button").removeAttr("disabled");
        checkPlayer();
    }, 500 * (genPattern.length + 1));
}

// checks player inputs and matches with correct answer
function checkPlayer() {
    let counter = 0; // used to iterate the correct pattern array
    playerTurn = true;
    $(".button").off("click"); // removes old listener
    $(".button").on("click", function() {
        let btn = $(this).attr("id");
        animateButton(btn);
        if (playerTurn) playPattern.push(btn);
        console.log(playPattern);
        
        // checks if current button press matches with correct array
        if (btn == genPattern[counter] && counter < genPattern.length) {
            counter++;
            // if all inputs are correct
            if (counter == genPattern.length && playerTurn) {
                round++;
                counter = 0;
                started = false;
                playPattern = [];
            }
        }

        // if any wrong input occurs, game over state is triggered
        else if (btn != genPattern[counter] && counter < genPattern.length) {
            let wrong = new Audio("./sounds/wrong.mp3");
            wrong.play();
            console.log(btn, genPattern[counter], counter);
            gameover = true;
            $("h1").text("Game Over! Enter to restart");
            $(this).css("backgroundColor", "gray");
            $("#" + genPattern[counter]).css("backgroundColor", "lightgreen");
            $(".submit").text("Restart");
            started = false;
            counter = 0;
            genPattern = [];
            playPattern = [];
            round = 1;
        }
    })
}

// rudimentary button event listener
$(".button").on("click", function() {
    let btn = $(this).attr("id");
    animateButton(btn);
});

// start and restart game logic
// arrow key presses for clicking buttons
$(document).on("keydown", function(event) {
    switch (event.key) {
        case "Enter":
            if (!started && !gameover) {
                $("h1").text("Round " + round);
                started = true;
                generatePattern();
            }
            else if (gameover) {
                started = true;
                gameover = false;
                generatePattern();
                $(".button").removeAttr("style");
            }
            break;
        case "ArrowUp":
            if (playerTurn) {
                $("#green").click();
                break;
            }
        case "ArrowLeft":
            if (playerTurn) {
                $("#red").click();
                break;
            }
        case "ArrowRight":
            if (playerTurn) {
                $("#yellow").click();
                break;
            }
        case "ArrowDown":
            if (playerTurn) {
                $("#blue").click();
                break;
            }
    }
});

$(".submit").on("click", submitLogic);